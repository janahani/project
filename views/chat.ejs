<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css"
        integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="stylesheet" type="text/css" href="/css/styleHF.css">
    <link rel="stylesheet" type="text/css" href="/css/styleForm.css">
    <link rel="stylesheet" type="text/css" href="/css/chat.css">
   
    <title>Chat app</title>
</head>

<body>
   
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <h1>iChat</h1>
    <div class="main">
        <div class="name">
            <span><i class="far fa-user"></i></span>
            <input type="hidden" value="<%=user.Type %>" id="usertype">
            <p id="name-input" class="name-input" ><%=user.Username %></p> 
        </div>
        <ul class="message-container" id="message-container">
            <li class="message-left">
                <p class="message">
                    <span></span>
                </p>
            </li>
            <li class="message-right">
                <p class="message">
                    <span></span>
                </p>
            </li>
        </ul>

        <form class="message-form" id="message-form">
            <input type="text" name="message" id="message-input" class="message-input">
            <input type="hidden" name="sender_id" id="sender" value="<%=user._id%>">
            <div class="v-divider"></div>
            <button type="submit" class="send-button">
                send <span><i class="fas fa-paper-plane"></i></span>
            </button>
        </form>

    </div>
     
    <script src="/socket.io/socket.io.js"></script>
    <script>

        var sender_id='<%=user._id%>';
        // const socket = io('/user-namespace',{
        //     auth:{
        //     token:'<%=user._id%>'
        //     }
        // });

        const socket=io();



        const messageContainer = document.getElementById("message-container");

        const nameInput = document.getElementById("name-input");

        const messageForm = document.getElementById("message-form");

        const messageInput = document.getElementById("message-input");

        const senderId=document.getElementById("sender");

        var type = document.getElementById("usertype");

        var receiver_id;

        messageForm.addEventListener("submit", (e) => {
        e.preventDefault();
        sendMessage();
        });

        function sendMessage() {
        if (messageInput.value === "") return;
        console.log(messageInput.value);
        var name;
        if (type.value === "admin") {
            receiver_id='6473b4b88feb5746f0bf4530';
        } else {
            receiver_id='6473bed00f4f61858f1cc898';
        }
        const data = {
            sender_id: sender.value,
            receiver_id:'6473bed00f4f61858f1cc898',
            name:nameInput.innerHTML,
            message: messageInput.value,
            dateTime: new Date(),
        };

        $.ajax({
            url: "chat/saveChat",
            method: "POST",
            data: {  
            sender_id: sender.value,
            receiver_id:'6473bed00f4f61858f1cc898',
            name:nameInput.innerHTML,
            message: messageInput.value,
            dateTime: new Date(),  },

            success: function (response) {
            if(response.success){
                console.log(response);
            
                socket.emit("newChat", data);
                addMessagetoUI(true, data);
                messageInput.value = "";
                
            }
            else{
                alert(response.msg)
            }
            },

        });
        
            //for receiving a message
        socket.on('loadNewChat', (data) => {
            console.log(data);
            addMessagetoUI(false, data);
        });
        
        }



        function addMessagetoUI(isOwnMessage, data) {
        const element = `
                            <li class="${
                            isOwnMessage ? "message-right" : "message-left"
                            }">
                            <p class="message">
                                ${data.message}
                                <span>
                                ${data.name} ${moment(data.dateTime).fromNow()}
                                </span>
                            </p>
                            </li>
                        `;
        messageContainer.innerHTML += element;
        scrollToBottom();
        }

        function scrollToBottom() {
        messageContainer.scrollTo(0, messageContainer.scrollHeight);
        }


      
    </script>


    <!-- <script src="/socket.io/socket.io.js"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.28.0/moment.min.js"
        integrity="sha512-Q1f3TS3vSt1jQ8AwP2OuenztnLU6LwxgyyYOG1jgMW/cbEMHps/3wjvnl1P3WTrF3chJUWEoxDUEjMxDV8pujg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        // <script src="/js/chat.js" type="text/javascript"></script>
</body>

</html>